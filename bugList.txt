DONE

' conversion graphics PSD
' project VBP renamed all contents
' rename all files
' tooltips, text all converted justclock, just clock, globe
' unwanted time controls, code and variables removed from prefs
' test cpu percent extraction using registry - failure
' drive percent extraction using API
' gauge digital displays
' pointer rotation
' lamps added and lit at low space
' icons created and assigned to forms
' sizing control corrected
' help image
' about image
' menu text changed
' new sampling control
' colouring new control

' about size reduced
' byte overflow problem with large drives and VB6 double max storage
' new drive control on prefs general tab
' global drive var for saving, reading and validation
' cwOverlay, removed all globals, replacing with properties
' add calls to cwOverlay setting properties where required
' about text
' one page help form widened
' about image customised and resized
' readme.md created and updated with new images
' test autostart
' initial github synch.

' smooth pointer - flick/smooth - done
' sampling interval vars - done
' sampling interval var validation - done
' sampling interval var reading/writing - done
' tooltip displaying usage in % and GB free - done

' -oOo-

TODO

' removeable unmounted drives assigned to USB &c cause overflow errors

' when new gauge spawned using menu option
' check if there is a spawn_n already extant in the settings.ini
' if not present then write the same settings.ini with [Software\PzStorageGauge\spawn_n]
' determine new position set as an offset to current gauge for current DPI only, eg. clockHighDpiXPos=
' write the position into [Software\PzStorageGauge\spawn_1] for eg.
' spawn new widget with parameter spawn_1

if widget opened with spawn_1 parameter
     read the [Software\PzStorageGauge\spawn_1] clockHighDpiXPos and set position
     read the [Software\PzStorageGauge\spawn_1]currentDrive=C:\  and set the drive
    ' if no such  entry is present then use [Software\PzStorageGauge]currentDrive=C:\ the first drive as normal.
    ' when selecting the drive to monitor, via button, then if opened with spawn parameter then read the [spawn_1] currentDrive and set accordingly.
    ' when opening prefs indicate spawn_1 in the title
    ' when opening prefs use spawn_1 state to indicate current drive selected
    ' when selecting a new drive to monitor, via prefs, then if opened with spawn parameter then read the [spawn_1] currentDrive and set accordingly.
    ' all other settings.ini reads and writes should occur with the spawn_1 prefix.
    
    when the binary is run and the "run at windows start" is present the main widget should initiate the spawned items according to what it finds in the settings.ini
    kicking off the same binary with the spawn_n parameter.

' if widget opened without spawn parameter present
  ' when starting up, with no spawn param, checks to see if spawn_n sections exist in the settings
  ' if they do exist, then spawn one widget for each
  ' no other differences required
  
' later on some control of spawned widgets could be added to the prefs

' the same code to be added to the OHM widget
' the same code to be added to the Network widget
' the same code to be added to the Wireless widget

' html help and images updated
' chm help built



' add second monitor - wip find cable!

' test usage of RC6 for monitor awareness - wip
'      adjust Form Position on startup placing form onto Correct Monitor when placed off screen due to
'               monitor/resolution changes.

' https://www.vbforums.com/showthread.php?900892-VB6-Simple-way-to-make-your-VB6-application-quot-Per-Monitor-DPI-Aware-quot

' adjustFormPositionToCorrectMonitor, make it work and observe the result as per FCW - wip
' adjustFormPositionToCorrectMonitor - prefs form
' adjustFormPositionToCorrectMonitor - licence form
' adjustFormPositionToCorrectMonitor - about form
' adjustFormPositionToCorrectMonitor - help form

' setup2go create setup.exe

' -oOo-

' Later tasks after testing

' test the icon sizes on 32bit Win7, XP and ReactOS, find out if 48x48 causes a crash
' 32x32 (24 bit)
' 16x16 (24 bit)
' 48x48 (32 bit)
' 32x32 (32 bit)
' 16x16 (32 bit)

' test on ReactOS

' patch a 256 bit icon into the VB6 binary
' https://www.vbforums.com/showthread.php?858347-RESOLVED-How-to-create-and-connect-quality-icon-group-to-your-VB6-app

' RC BUGS & LIMITATIONS
' =====================

' tooltips also resize when the whole thing is resized, code received from Olaf tested - resizing results in missing text and blank tooltips, using non-standard font centurion light
' RC6 needs a static tooltip option.



